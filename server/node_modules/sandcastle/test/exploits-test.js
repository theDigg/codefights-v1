var assert = require('assert'),
  SandCastle = require('../lib').SandCastle,
  fs = require('fs');

describe('__defineGetter__-exploit', function () {
  it('should not execute untrusted code as a result of __defineGetter_ exploit', function (finished) {
    // fix for exploit: https://github.com/bcoe/sandcastle/pull/21
    var sandcastle = new SandCastle(),
      script = sandcastle.createScript(fs.readFileSync("./test/fixtures/exploit-getter.txt").toString());

    script.on('exit', function(err, output) {
      setTimeout(function() {
        sandcastle.kill();
        assert.equal(fs.existsSync('./owned.txt'), false);
        finished();
      }, 2000);
    });

    script.run({parameters: {string: 'hello!'}});
  });
});

describe('arguments.callee-exploit', function() {
  it('should not execute untrusted code as a result of walking the arguments.callee chain', function(finished) {
    // fix for exploit: https://github.com/bcoe/sandcastle/pull/21
    var sandcastle = new SandCastle(),
      script = sandcastle.createScript(fs.readFileSync("./test/fixtures/exploit-callee.txt").toString());

    setTimeout(function() {
      sandcastle.kill();
      assert.equal(fs.existsSync('./owned.txt'), false);
      finished();
    }, 2000);

    script.run({parameters: {string: 'hello!'}});
  });
});
